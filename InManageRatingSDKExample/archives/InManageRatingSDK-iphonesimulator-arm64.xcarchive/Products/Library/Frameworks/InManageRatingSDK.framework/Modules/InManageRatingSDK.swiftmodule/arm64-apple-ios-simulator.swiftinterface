// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.7.2 (swiftlang-5.7.2.135.5 clang-1400.0.29.51)
// swift-module-flags: -target arm64-apple-ios13.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name InManageRatingSDK
// swift-module-flags-ignorable: -enable-bare-slash-regex
import Foundation
@_exported import InManageRatingSDK
import Swift
import UIKit
import _Concurrency
import _StringProcessing
@objc @objcMembers public class RateWithCommentFields : ObjectiveC.NSObject {
  @objc public init(imgBackgroundHeader: UIKit.UIImage, imgMainCenterHeader: UIKit.UIImage, limitCommentCount: Swift.Int, translatingMainTitle: Swift.String? = nil, translatingMainContent: Swift.String? = nil, translatingPlaceHolder: Swift.String? = nil, translatingBtnNoThanks: Swift.String? = nil, translatingBtnSendRating: Swift.String? = nil)
  @objc deinit
}
@objc @objcMembers public class RateUsFields : ObjectiveC.NSObject {
  @objc public init(imgBackgroundHeader: UIKit.UIImage, imgMainCenterHeader: UIKit.UIImage, translatingMainTitle: Swift.String? = nil, translatingMainContent: Swift.String? = nil, translatingBtnNoThanks: Swift.String? = nil, translatingBtnSendRating: Swift.String? = nil)
  @objc deinit
}
extension UIKit.UIFont {
  public static func jbs_registerFont(withFilenameString filenameString: Swift.String, bundle: Foundation.Bundle)
}
@objc @objcMembers public class RateInAppstoreFields : ObjectiveC.NSObject {
  @objc public init(imgBackgroundHeader: UIKit.UIImage, imgMainCenterHeader: UIKit.UIImage, translatingMainTitle: Swift.String? = nil, translatingMainContent: Swift.String? = nil, translatingBtnNoThanks: Swift.String? = nil, translatingBtnAppStore: Swift.String? = nil)
  @objc deinit
}
public enum AppBundle {
  case mcdonalds
  case mallsApp
  case none
  public static func == (a: InManageRatingSDK.AppBundle, b: InManageRatingSDK.AppBundle) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objc open class InManageRating : ObjectiveC.NSObject {
  @objc weak open var delegate: InManageRatingSDK.InmanageDelegate?
  @objc open var isDebugMode: Swift.Bool
  @objc open class func shared() -> InManageRatingSDK.InManageRating
  open class func destroy()
  public func initInManageRating(appBundle: InManageRatingSDK.AppBundle, colorApp: UIKit.UIColor, rateUsFields: InManageRatingSDK.RateUsFields, thanksForRatingFields: InManageRatingSDK.ThanksForRatingFields, rateInAppstoreFields: InManageRatingSDK.RateInAppstoreFields, rateWithCommentFields: InManageRatingSDK.RateWithCommentFields, strAppstoreUrl: Swift.String, chosenDefaultRate: Swift.Int? = 0)
  public func presentThanksForRatingScreen()
  public func presentRateUsScreen()
  public func presentRateInAppstore()
  public func presentRateWithComment()
  public func closeSDK()
  @objc deinit
}
@objc public protocol InmanageDelegate : ObjectiveC.NSObjectProtocol {
  @objc func didTapCloseInManageRatingSDK()
  @objc func didTapHighRatingScore(score: Swift.Int)
  @objc func didTapLowRatingScore(score: Swift.Int)
  @objc func didSendCommentRating(comment: Swift.String)
}
@objc @objcMembers public class ThanksForRatingFields : ObjectiveC.NSObject {
  @objc public init(imgBackgroundHeader: UIKit.UIImage, imgMainCenterHeader: UIKit.UIImage, translatingMainTitle: Swift.String? = nil, translatingMainContent: Swift.String? = nil, translatingBtnClose: Swift.String? = nil)
  @objc deinit
}
public typealias Dict = [Swift.String : Any]
@_hasMissingDesignatedInitializers public class Constants {
  @objc deinit
}
extension InManageRatingSDK.AppBundle : Swift.Equatable {}
extension InManageRatingSDK.AppBundle : Swift.Hashable {}
